import SignInPage from '../../page-objects/signin-page';
import PasswordPage from '../../page-objects/password-page';
import NavBarPage from '../../page-objects/navbar-page';

import {
    getSuccessToast,
    getDangerToast
} from '../../util/utils';

<%_
const baseApi = (applicationType === 'gateway' && locals.microserviceName) ? microserviceName.toLowerCase() + '/api/' : 'api/';
_%>
describe('Account Management', () => {

    beforeEach(() => {
        cy.cleanUsers();
        cy.logout();
        cy.visit('/');
    });

    it('should be able to update password', () => {
        cy.createAndActivateUserUsing('user-change-password', 'user-change-password@localhost.jh', 'user-change-password');
        NavBarPage.getSignInPage();
        SignInPage.autoSignInUsing('user-change-password', 'user-change-password');
        NavBarPage.getPasswordPage();
        PasswordPage.autoChangePassword('user-change-password', 'new_password', 'new_password');

        // Error toast should appear
        getSuccessToast().should('exist');
        cy.logout();
        cy.visit('/');

        // Should be able to login with updated password
        NavBarPage.getSignInPage();
        SignInPage.autoSignInUsing('user-change-password', 'new_password');
    });

    it('should fail to update password when using incorrect current password', () => {
      cy.createAndActivateUserUsing('user-fail-change-password', 'user-fail-change-password@localhost.jh', 'user-fail-change-password');
      NavBarPage.getSignInPage();
      SignInPage.autoSignInUsing('user-fail-change-password', 'user-fail-change-password');
      NavBarPage.getPasswordPage();
      PasswordPage.autoChangePassword('bad-password', 'new_password', 'new_password');

      // Error toast should appear
      getDangerToast().should('exist');
  });
});
