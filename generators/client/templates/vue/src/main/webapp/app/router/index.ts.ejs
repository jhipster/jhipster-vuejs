import Vue from 'vue';
import Component from 'vue-class-component';
Component.registerHooks([
  'beforeRouteEnter',
  'beforeRouteLeave',
  'beforeRouteUpdate' // for vue-router 2.2+
])
import Router from 'vue-router';
const Home = () => import('../core/home/home.vue');
const Register = () => import('../account/register/register.vue');
const Activate = () => import('../account/activate/activate.vue');
const ResetPassword = () => import('../account/reset-password/reset-password.vue');
const ChangePassword = () => import('../account/change-password/change-password.vue');
<%_ if (authenticationType === 'session') { _%>
const Sessions = () => import('../account/sessions/sessions.vue');
<%_ } _%>
const Settings = () => import('../account/settings/settings.vue');
const <%= jhiPrefixCapitalized %>ConfigurationComponent = () => import('../admin/configuration/configuration.vue');
const <%= jhiPrefixCapitalized %>DocsComponent = () => import('../admin/docs/docs.vue');
const <%= jhiPrefixCapitalized %>HealthComponent = () => import('../admin/health/health.vue');
const <%= jhiPrefixCapitalized %>LogsComponent = () => import('../admin/logs/logs.vue');
const <%= jhiPrefixCapitalized %>AuditsComponent = () => import('../admin/audits/audits.vue');
const <%= jhiPrefixCapitalized %>MetricsComponent = () => import('../admin/metrics/metrics.vue');
const <%= jhiPrefixCapitalized %>UserManagementComponent = () => import('../admin/user-management/user-management.vue');
const <%= jhiPrefixCapitalized %>UserManagementViewComponent = () => import('../admin/user-management/user-management-view.vue');
const <%= jhiPrefixCapitalized %>UserManagementEditComponent = () => import('../admin/user-management/user-management-edit.vue');
<%_ if (applicationType === 'gateway' && serviceDiscoveryType) { _%>
const <%= jhiPrefixCapitalized %>GatewayComponent = () => import('../admin/gateway/gateway.vue');
<%_ } _%>
<%_ if (websocket === 'spring-websocket') { _%>
const <%= jhiPrefixCapitalized %>TrackerComponent = () => import('../admin/tracker/tracker.vue');
<%_ } _%>
// jhipster-needle-add-entity-to-router-import - JHipster will import entities to the router here

Vue.use(Router);

export default new Router({
  routes: [
    {
      path: '/',
      name: 'Home',
      component: Home
    },
    {
      path: '/register',
      name: 'Register',
      component: Register
    },
    {
      path: '/activate',
      name: 'Activate',
      component: Activate
    },
    {
      path: '/resetPassword',
      name: 'ResetPassword',
      component: ResetPassword
    },
    {
      path: '/account/password',
      name: 'ChangePassword',
      component: ChangePassword
    }
    <%_ if (authenticationType === 'session') { _%>,
    {
      path: '/account/sessions',
      name: 'Sessions',
      component: Sessions
    }<%_ } _%>,
    {
      path: '/account/settings',
      name: 'Settings',
      component: Settings
    },
    {
      path: '/admin/user-management',
      name: '<%= jhiPrefixCapitalized %>User',
      component: <%= jhiPrefixCapitalized %>UserManagementComponent
    },
    {
      path: '/admin/user-management/new',
      name: '<%= jhiPrefixCapitalized %>UserCreate',
      component: <%= jhiPrefixCapitalized %>UserManagementEditComponent
    },
    {
      path: '/admin/user-management/:userId/edit',
      name: '<%= jhiPrefixCapitalized %>UserEdit',
      component: <%= jhiPrefixCapitalized %>UserManagementEditComponent
    },
    {
      path: '/admin/user-management/:userId/view',
      name: '<%= jhiPrefixCapitalized %>UserView',
      component: <%= jhiPrefixCapitalized %>UserManagementViewComponent
    },
    {
      path: '/admin/docs',
      name: '<%= jhiPrefixCapitalized %>DocsComponent',
      component: <%= jhiPrefixCapitalized %>DocsComponent
    },
    {
      path: '/admin/audits',
      name: '<%= jhiPrefixCapitalized %>AuditsComponent',
      component: <%= jhiPrefixCapitalized %>AuditsComponent
    },
    {
      path: '/admin/<%= jhiPrefixDashed %>-health',
      name: '<%= jhiPrefixCapitalized %>HealthComponent',
      component: <%= jhiPrefixCapitalized %>HealthComponent
    },
    {
      path: '/admin/logs',
      name: '<%= jhiPrefixCapitalized %>LogsComponent',
      component: <%= jhiPrefixCapitalized %>LogsComponent
    },
    {
      path: '/admin/<%= jhiPrefixDashed %>-metrics',
      name: '<%= jhiPrefixCapitalized %>MetricsComponent',
      component: <%= jhiPrefixCapitalized %>MetricsComponent
    },
    {
      path: '/admin/<%= jhiPrefixDashed %>-configuration',
      name: '<%= jhiPrefixCapitalized %>ConfigurationComponent',
      component: <%= jhiPrefixCapitalized %>ConfigurationComponent
    }
    <%_ if (applicationType === 'gateway' && serviceDiscoveryType) { _%>,
    {
      path: '/admin/gateway',
      name: '<%= jhiPrefixCapitalized %>GatewayComponent',
      component: <%= jhiPrefixCapitalized %>GatewayComponent
    }
    <%_ } _%>
    <%_ if (websocket === 'spring-websocket') { _%>,
    {
      path: '/admin/<%= jhiPrefixDashed %>-tracker',
      name: '<%= jhiPrefixCapitalized %>TrackerComponent',
      component: <%= jhiPrefixCapitalized %>TrackerComponent
    }
    <%_ } _%>
    // jhipster-needle-add-entity-to-router - JHipster will add entities to the router here
  ]
});
