import axios from 'axios'
import Principal from '../Principal.vue';

const LoginForm = {
  mixins: [Principal],
  data() {
    return {
      authenticationError: null,
      login: null,
      password: null,
      rememberMe: null
    };
  },
  methods: {
    doLogin: function () {
      <%_ if (authenticationType === 'jwt') { _%>
      const data = { username: this.login, password: this.password, rememberMe: this.rememberMe };
      axios
        .post('api/authenticate', data)
        .then((result) => {
          const bearerToken = result.headers.authorization;
          if (bearerToken && bearerToken.slice(0, 7) === 'Bearer ') {
            const jwt = bearerToken.slice(7, bearerToken.length);
            if (this.rememberMe) {
              localStorage.setItem('jhi-authenticationToken', jwt);
            } else {
              sessionStorage.setItem('jhi-authenticationToken', jwt);
            }
          }
      <%_ } else { _%>
      const data =
        'j_username=' +
        encodeURIComponent(this.login) +
        '&j_password=' +
        encodeURIComponent(this.password) +
        '&remember-me=' +
        this.rememberMe +
        '&submit=Login';
      axios
        .post('api/authentication', data, {
          headers: {
            'Content-Type': 'application/x-www-form-urlencoded'
          }
        }).then(() => {
        <%_ } _%>
          this.authenticationError = false;
          this.$root.$emit('bv::hide::modal','login-page');
          this.retrieveAccount();
        }).catch(()=> {
          this.authenticationError = true;
        });
      }
    },
    watch:{
      $route (){
        this.$root.$emit('bv::hide::modal','login-page');
    }
  }
};

export default LoginForm;
